
model{

# Priors
for(i in 1:n.bee){ # For each bee species

# We assign a prior from 0 to 1 for psi
# psi = The probability a bee species interacts with a plant species

  alpha_psi[i] ~ dnorm(mu.psi, tau.psi)

# The detection probability = the probability a study documented a bee-plant interaction
  alpha_p[i] ~ dnorm(mu.p, tau.p)

}

mu.psi ~ dnorm(0, 0.01)
mu.p ~ dnorm(0, 0.01)

tau.psi <- 1/(sd.psi * sd.psi)
sd.psi ~ dgamma(0.01, 0.01)

tau.p <- 1/(sd.p * sd.p)
sd.p ~ dgamma(0.01, 0.01)


# Model
  # Note the parrelels between the model code here and how we generated the data above

for(i in 1:n.bee){


  for(j in 1:n.plant){
  
    # True bee-plant interaction
    
    z[i, j] ~ dbern(psi[i, j])
 
   logit(psi[i, j]) <- alpha_psi[i]

      for(k in 1:n.study){

      # Observed bee-plant interaction
      
        y[i,j,k] ~ dbern(p.eff[i,j,k])

        p.eff[i,j,k] <- p[i,j,k] * z[i,j]
        
        logit(p[i,j,k]) <- alpha_p[i]
        
    }
    
  }

}



# Derived quantities
# Determine the total number of plants that each bee interacts with
  # All we do is sum across the 2nd dimension of the z matrix (which represents plant species)

for(i in 1:n.bee){

    # To determine the total number of plant interactions per bee species, we will sum across the plants
    z.bee.plant[i] <- sum(z[i, ])

  }


}

